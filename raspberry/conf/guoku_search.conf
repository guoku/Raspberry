source entities
{
    type                = mysql

    sql_host            = localhost  
    sql_user            = root 
    sql_pass            = 123456
    sql_db              = guoku
    sql_port            = 3306 

    sql_query_pre       = SET NAMES utf8
    sql_query           = SELECT base_entity.id AS entity_id, base_entity.title AS title, base_entity.brand AS brand, base_entity.intro AS intro, \
                          base_entity.neo_category_id AS neo_category_id, base_entity.creator_id AS creator_id, \
                          base_entity.price AS price, base_entity.weight AS entity_weight, base_entity.like_count AS like_count, \
                          base_entity.created_time AS created_time, base_entity.updated_time AS updated_time \
                          FROM base_entity INNER JOIN base_neo_category ON base_entity.neo_category_id=base_neo_category.id

    #sql_query_info      = SELECT * FROM `base_entity` WHERE `id` = $id

    # ForeignKey's
    sql_attr_uint       = neo_category_id
    sql_attr_uint       = creator_id
    sql_attr_bigint     = entity_weight 
    sql_attr_bigint     = like_count
    sql_attr_float      = price 


    # DateField's and DateTimeField's
    sql_attr_timestamp   = created_time
    sql_attr_timestamp   = updated_time


}
 
source notes 
{
    type                = mysql

    sql_host            = localhost  
    sql_user            = root 
    sql_pass            = 123456
    sql_db              = guoku
    sql_port            = 3306 

    sql_query_pre       = SET NAMES utf8
    sql_query           = SELECT base_note.id AS id, base_note.entity_id AS entity_id, base_note.note AS note FROM base_note WHERE selector_id IS NOT NULL; 

    
    sql_attr_uint       = entity_id 

}

source users 
{
    type                = mysql

    sql_host            = localhost  
    sql_user            = root 
    sql_pass            = 123456
    sql_db              = guoku
    sql_port            = 3306 

    sql_query_pre       = SET NAMES utf8
    sql_query           = SELECT base_user_profile.id AS id, base_user_profile.user_id AS user_id, base_user_profile.nickname AS nickname, IFNULL(uft.fans_count, 0) AS fans_count FROM base_user_profile LEFT JOIN ( SELECT followee_id, COUNT(*) AS fans_count FROM base_user_follow GROUP BY followee_id ) AS uft ON base_user_profile.user_id=uft.followee_id;

    # ForeignKey's
    sql_attr_uint       = user_id 
    sql_attr_uint       = fans_count 
}

index entities
{
    source               = entities
    path                 = /home/stxiong/guoku/data/search/index/entities/ 
    docinfo              = extern
    morphology           = none
    min_word_len         = 1
    html_strip           = 0
    charset_type         = zh_cn.utf-8
    charset_dictpath     = /usr/local/mmseg3/etc/ 
    min_prefix_len       = 0
    min_infix_len        = 0

}

index notes 
{
    source               = notes 
    path                 = /home/stxiong/guoku/data/search/index/notes/ 
    docinfo              = extern
    morphology           = none
    min_word_len         = 1
    html_strip           = 0
    charset_type         = zh_cn.utf-8
    charset_dictpath     = /usr/local/mmseg3/etc/ 
    min_prefix_len       = 0
    min_infix_len        = 0

}

index users 
{
    source               = users 
    path                 = /home/stxiong/guoku/data/search/index/users/ 
    docinfo              = extern
    morphology           = none
    min_word_len         = 1
    html_strip           = 0
    charset_type         = zh_cn.utf-8
    charset_dictpath     = /usr/local/mmseg3/etc/ 
    min_prefix_len       = 0
    min_infix_len        = 0

}

#searchd服务定义
searchd
{
    listen               = 3312
    read_timeout         = 5
    max_children         = 30
    max_matches          = 1000
    seamless_rotate      = 0
    preopen_indexes      = 0
    unlink_old           = 1
    pid_file             = /home/stxiong/guoku/data/search/log/searchd_guoku.pid  
    log                  = /home/stxiong/guoku/data/search/log/searchd_guoku.log  
    query_log            = /home/stxiong/guoku/data/search/log/query_guoku.log 
}
